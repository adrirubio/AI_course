*** How to make predictions
- In this notebook for the first time we actually make predictions using the model.

***** finding watched movies
This line gets all the movies that the user with new_user_id 1 has already watched. The result is stored in watched_movie_ids.

#+BEGIN_SRC python
# Suppose I want to find recommendations for user_id = 1
# First find all the movie_ids for movies they haven't yet watched
watched_movie_ids = df[df.new_user_id == 1].new_movie_id.values
#+END_SRC

***** finding unwatched movies
This line identifies movie IDs that the user hasn't watched yet. It does this by excluding the watched_movie_ids from all available movie IDs.

#+BEGIN_SRC python
potential_movie_ids = df[~df.new_movie_id.isin(watched_movie_ids)].new_movie_id.unique()
#+END_SRC

Printing the exact number of unwatched movies.

#+BEGIN_SRC python
potential_movie_ids.shape
len(set(potential_movie_ids))
#+END_SRC

***** preparing user ID's for recommendations
This creates an array of ones with the same length as potential_movie_ids.

#+BEGIN_SRC python
user_id_to_recommend = np.ones_like(potential_movie_ids)
#+END_SRC

Now this line converts the NumPy arrays of user IDs and potential movie IDs to tensors.

#+BEGIN_SRC python
t_user_ids = torch.from_numpy(user_id_to_recommend).long()
t_movie_ids = torch.from_numpy(potential_movie_ids).long()
#+END_SRC

***** generating predictions
#+BEGIN_SRC python
with torch.no_grad():
    predictions = model(t_user_ids, t_movie_ids)
#+END_SRC

Now we convert the prediction is converted into a NumPy array.

#+BEGIN_SRC python
predictions_np = predictions.cpu().numpy().flatten()
#+END_SRC


***** sorting predictions
This sorts the predictions from highest to lowest

#+BEGIN_SRC python
sort_idx = np.argsort(-predictions_np)
#+END_SRC


Next we select the top ten

#+BEGIN_SRC python
top_10_movie_ids = potential_movie_ids[sort_idx[:10]]
top_10_scores = predictions_np[sort_idx[:10]]
#+END_SRC


***** printing the predictions
Finally we can print the predictions

#+BEGIN_SRC python
for movie, score in zip(top_10_movie_ids, top_10_scores):
    print("movie:", movie, "score:", score)
#+END_SRC

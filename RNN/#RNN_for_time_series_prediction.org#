** RNN for time series prediction
   Most of the code in this notebook has been seen before in previous notebooks so will not be revised.

*** imports
    #+BEGIN_SRC python
    import torch
    import torch.nn as nn
    import numpy as np
    import matplotlib.pyplot as plt
    #+END_SRC

*** make the original data
    This generates the time series data set and then plots it.
    #+BEGIN_SRC python
    # make the original data
    N = 1000
    series = np.sin(0.1*np.arange(N)) #+ np.random.randn(N)*0.1
    
    # plot it
    plt.plot(series)
    plt.show()
    #+END_SRC

*** build the dataset
    #+BEGIN_SRC python
    #+BEGIN_SRC python
    T = 10  # Number of time steps to look back
    X = []  # Input sequences
    Y = []  # Output values

    # Loop to create sequences (X) and corresponding labels (Y)
    for t in range(len(series) - T):
        x = series[t:t+T]  # Get a sequence of 'T' values from the series
        X.append(x)        # Append the sequence to the input list
        y = series[t+T]    # The next value after the sequence ends
        Y.append(y)        # Append this next value to the output list

    # Reshape data to fit the model input
    X = np.array(X).reshape(-1, T, 1)
    Y = np.array(Y).reshape(-1, 1)
    N = len(X)
    print("X.shape", X.shape, "Y.shape", Y.shape)
    #+END_SRC





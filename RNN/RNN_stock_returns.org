** Stock Prediction

*** Imports
#+BEGIN_SRC
import torch
import torch.nn as nn
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.preprocessing import StandardScaler
#+END_SRC

*** Load the data from a URL
#+BEGIN_SRC python
# yes, you can read dataframes from URLs!
df = pd.read_csv('https://raw.githubusercontent.com/lazyprogrammer/machine_learning_examples/master/tf2.0/sbux.csv')
#+END_SRC

*** prepare the data
#+BEGIN_SRC python
# calculate returns by first shifting the data
df['PrevClose'] = df['close'].shift(1) # move everything up 1

# so now it's like
# close / prev close
# x[2] x[1]
# x[3] x[2]
# x[4] x[3]
# ...
# x[t] x[t-1]
#+END_SRC

#+BEGIN_SRC python
# then the return is
# (x[t] - x[t-1]) / x[t-1]
df['Return'] = (df['close'] - df['PrevClose']) / df['PrevClose']
#+END_SRC

|     | date	        open	high	low	close	volume	Name	PrevClose      Return
|0    |	2013-02-08	27.920	28.325	27.920	28.185	7146296	SBUX	NaN	       NaN
|1    |	2013-02-11	28.260	28.260	27.930	28.070	5457354	SBUX	28.185	       -0.004080
|2    |	2013-02-12	28.000	28.275	27.975	28.130	8665592	SBUX	28.070	        0.002138
|3    |	2013-02-13	28.230	28.230	27.750	27.915	7022056	SBUX	28.130	       -0.007643
|4    |	2013-02-14	27.765	27.905	27.675	27.775	8899188	SBUX	27.915	       -0.005015
